#!/usr/bin/env bash
# Copyright 2024 Google LLC

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

source $(dirname "$0")/common

export SERVER_START_CMD=$(cat << END
/server/bin/server \
--init_config_client="false" \
--port=50061 \
--enable_auction_service_benchmark="true" \
--udf_num_workers=4 \
--js_worker_queue_len=100 \
--test_mode="true" \
--telemetry_config="mode: OFF" \
--roma_timeout_ms="120000" \
--enable_report_win_input_noising="false" \
--seller_code_fetch_config='{
      "fetchMode": 0,
      "auctionJsPath": "",
      "auctionJsUrl": "${AUCTION_JS_URL}",
      "urlFetchPeriodMs": 13000000,
      "urlFetchTimeoutMs": 30000,
      "enableSellerDebugUrlGeneration": true,
      "enableReportResultUrlGeneration": true,
      "enableReportWinUrlGeneration": true,
      "enablePrivateAggregateReporting": false,
      "buyerReportWinJsUrls": {"${BUYER_REPORT_WIN_URL}":"${BUYER_REPORT_WIN_SCRIPT}"},
      "protectedAppSignalsBuyerReportWinJsUrls": {"${BUYER_REPORT_WIN_URL}":"https://storage.googleapis.com/wasm-explorer/PAS/PASreportWin.js"}
    }' \
--enable_otel_based_logging="true" \
--consented_debug_token="test_token" \
--ps_verbosity=2 \
--enable_protected_audience="true" \
--auction_tcmalloc_background_release_rate_bytes_per_second=4096 \
--auction_tcmalloc_max_total_thread_cache_bytes=10737418240 \
--enable_protected_app_signals="false" && exit
END
)


if [[ $1 == "--gdb" ]]; then
  export PROJECT_ROOT=$(git rev-parse --show-toplevel)
  declare -a -r DOCKER_RUN_ARGS=(
    "--volume=${PROJECT_ROOT}/bazel-bin/services/auction_service/server:/server/bin/server"
    "--name=auction"
  )
  export EXTRA_DOCKER_RUN_ARGS="${COMMON_DOCKER_RUN_ARGS[@]} ${DOCKER_RUN_ARGS[@]}"
  ${PROJECT_ROOT}/builders/tools/cbuild --seccomp-unconfined \
  --docker-network host --image build-debian \
  --cmd "apt-get update && apt-get -y install gdb && gdb -ex=r --args ${SERVER_START_CMD}"
else
  docker_image_uri="$(docker load -i dist/debian/auction_service_image.tar | sed -nr "s/^Loaded image: (.*)$/\1/p")"
  declare -a DOCKER_RUN_ARGS=(
      "--network=host"
      "--security-opt=seccomp=unconfined"
      "--security-opt=apparmor=unconfined"
  )
  docker run -it "${DOCKER_RUN_ARGS[@]}" "${docker_image_uri}" -c "${SERVER_START_CMD}"
fi
