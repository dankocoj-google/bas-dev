diff --git a/src/roma/byob/container/BUILD.bazel b/src/roma/byob/container/BUILD.bazel
index 4f7ae70b..50a43f30 100644
--- a/src/roma/byob/container/BUILD.bazel
+++ b/src/roma/byob/container/BUILD.bazel
@@ -15,10 +15,11 @@
 load("@aspect_bazel_lib//lib:copy_file.bzl", "copy_file")
 load("@aspect_bazel_lib//lib:expand_template.bzl", "expand_template")
 load("@rules_cc//cc:defs.bzl", "cc_binary")
+load("@rules_oci//oci:defs.bzl", "oci_image", "oci_load")
 load("@rules_pkg//pkg:mappings.bzl", "pkg_attributes", "pkg_files", "pkg_mkdirs")
 load("@rules_pkg//pkg:tar.bzl", "pkg_tar")
 load("//src/roma/byob/config:container.bzl", "roma_container_dir", "roma_container_root_dir")
-load("//third_party:container_deps.bzl", "DISTROLESS_USERS", "container_image")
+load("//third_party:container_deps.bzl", "DISTROLESS_USERS")
 
 [
     expand_template(
@@ -161,36 +162,69 @@ pkg_files(
     for user in DISTROLESS_USERS
 ]
 
-[
-    genrule(
-        name = "gen_byob_runtime_container_tar_{}".format(arch),
-        outs = ["byob_runtime_base_{}.tar".format(arch)],
-        cmd_bash = """echo FROM {base_image} | docker buildx build --output=type=tar,dest=$@ --file=- .""".format(
-            base_image = container_image(
-                "runtime-debian-nondebug-nonroot",
-                arch,
-            ).uri,
-        ),
-        visibility = ["//visibility:public"],
-    )
-    for arch in ("arm64", "amd64")
-]
-
 alias(
-    name = "byob_runtime_base.tar",
+    name = "runtime-debian-nondebug-nonroot",
     actual = select({
-        "@platforms//cpu:aarch64": ":byob_runtime_base_arm64.tar",
-        "@platforms//cpu:x86_64": ":byob_runtime_base_amd64.tar",
+        "@platforms//cpu:aarch64": "@runtime-debian-nondebug-nonroot-arm64",
+        "@platforms//cpu:x86_64": "@runtime-debian-nondebug-nonroot-amd64",
     }),
-    visibility = ["//visibility:public"],
 )
 
+[
+    oci_image(
+        name = "byob_runtime_image_{}".format(user.flavor),
+        base = ":runtime-debian-nondebug-nonroot",
+        tars = [":byob_runtime_tar_{}".format(user.flavor)],
+    )
+    for user in DISTROLESS_USERS
+]
+
+_server_image = "byob_server:v1-{flavor}"
+
+[
+    oci_load(
+        name = "byob_runtime_image_{}_tar".format(user.flavor),
+        image = ":byob_runtime_image_{}".format(user.flavor),
+        repo_tags = [_server_image.format(flavor = user.flavor)],
+    )
+    for user in DISTROLESS_USERS
+]
+
+[
+    filegroup(
+        name = "byob_runtime_image_{}.tar".format(user.flavor),
+        srcs = [":byob_runtime_image_{}_tar".format(user.flavor)],
+        output_group = "tarball",
+    )
+    for user in DISTROLESS_USERS
+]
+
+# warning: this is not hermetic, it uses the local docker client to load an
+# image, create a container then export that image using a static container name
+[
+    genrule(
+       name = "gen_byob_runtime_container_tar_{}".format(user.flavor),
+       srcs = [":byob_runtime_image_{}.tar".format(user.flavor)],
+       outs = ["byob_runtime_container_{}.tar".format(user.flavor)],
+       cmd_bash = """
+docker load -i "$(location :byob_runtime_image_{flavor}.tar)"
+CID=$$(docker create --entrypoint /server/bin/run_workers --privileged "{image_uri}")
+docker export $$CID -o $@
+docker rm $$CID
+""".format(
+            flavor = user.flavor,
+            image_uri = _server_image.format(flavor = user.flavor),
+         ),
+        visibility = ["//visibility:public"],
+     )
+    for user in DISTROLESS_USERS
+]
+
 [
     genrule(
         name = "gen_byob_runtime_container_with_dir_tar_{}".format(user.flavor),
         srcs = [
-            ":byob_runtime_base.tar",
-            ":byob_runtime_tar_{}.tar".format(user.flavor),
+            ":byob_runtime_container_{}.tar".format(user.flavor),
             ":container_config_{}.tar".format(user.user),
         ],
         outs = ["byob_runtime_container_with_dir_{}.tar".format(user.flavor)],
@@ -198,8 +232,7 @@ alias(
 TMPDIR="$$(mktemp --directory roma_container_tmp.XXXXXXXXXX)"
 MACHINE="$$(uname --machine)"
 mkdir --parents --mode=700 "$$TMPDIR/{roma_container_dir}/{roma_container_root_dir}"
-tar --extract --file="$(location :byob_runtime_base.tar)" --directory="$$TMPDIR/{roma_container_dir}/{roma_container_root_dir}"
-tar --extract --file="$(location :byob_runtime_tar_{flavor}.tar)" --directory="$$TMPDIR/{roma_container_dir}/{roma_container_root_dir}"
+tar --extract --file="$(location :byob_runtime_container_{flavor}.tar)" --directory="$$TMPDIR/{roma_container_dir}/{roma_container_root_dir}"
 tar --extract --file="$(location :container_config_{flavor}.tar)" --directory="$$TMPDIR/{roma_container_dir}"
 
 readonly ROOT_DIR="$${{TMPDIR}}/{roma_container_dir}/{roma_container_root_dir}"
